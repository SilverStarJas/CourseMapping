// <auto-generated />
using System;
using CourseMapping.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CourseMapping.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseMapping.Domain.Course", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("course_code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("course_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("course_name");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_university_id");

                    b.HasKey("Code");

                    b.HasIndex("UniversityId");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("CourseMapping.Domain.Subject", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("subject_code");

                    b.Property<string>("CourseCode")
                        .HasColumnType("text")
                        .HasColumnName("subject_course_code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject_description");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("subject_level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject_name");

                    b.HasKey("Code");

                    b.HasIndex("CourseCode");

                    b.ToTable("subject", (string)null);
                });

            modelBuilder.Entity("CourseMapping.Domain.University", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("university_id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("university_country");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("university_name");

                    b.HasKey("Id");

                    b.ToTable("university", (string)null);
                });

            modelBuilder.Entity("CourseMapping.Domain.Course", b =>
                {
                    b.HasOne("CourseMapping.Domain.University", "University")
                        .WithMany("Courses")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_university_id");

                    b.Navigation("University");
                });

            modelBuilder.Entity("CourseMapping.Domain.Subject", b =>
                {
                    b.HasOne("CourseMapping.Domain.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseCode")
                        .HasConstraintName("fk_subject_course_code");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CourseMapping.Domain.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CourseMapping.Domain.University", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
